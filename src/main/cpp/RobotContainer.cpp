// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: RobotContainer.

#include "RobotContainer.h"
#include <frc2/command/ParallelRaceGroup.h>
#include <frc/smartdashboard/SmartDashboard.h>



RobotContainer* RobotContainer::m_robotContainer = NULL;

RobotContainer::RobotContainer() : m_autonomousCommand(
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
){

                

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=SMARTDASHBOARD
    // Smartdashboard Subsystems


    // SmartDashboard Buttons
    frc::SmartDashboard::PutData("SwerveDrive", new SwerveDrive());
    frc::SmartDashboard::PutData("FlipDrive", new FlipDrive());
    frc::SmartDashboard::PutData("DownYesRoll", new DownYesRoll());
    frc::SmartDashboard::PutData("UpNoRoll", new UpNoRoll());
    frc::SmartDashboard::PutData("Forward", new Forward());
    frc::SmartDashboard::PutData("Backward", new Backward());
    frc::SmartDashboard::PutData("Shoot Sequential", new ShootSequential());
    frc::SmartDashboard::PutData("StartFlywheel", new StartFlywheel());
    frc::SmartDashboard::PutData("StopIndexer", new StopIndexer());
    frc::SmartDashboard::PutData("ExtendRetract", new ExtendRetract());
    frc::SmartDashboard::PutData("StopFlywheel", new StopFlywheel());
    frc::SmartDashboard::PutData("Climb", new Climb());
    frc::SmartDashboard::PutData("Aimbot Sequential", new AimbotSequential());
    frc::SmartDashboard::PutData("SetShootSpeed", new SetShootSpeed());
    frc::SmartDashboard::PutData("YawToTarget", new YawToTarget());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=SMARTDASHBOARD

    ConfigureButtonBindings();

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT-COMMANDS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT-COMMANDS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=AUTONOMOUS


    m_chooser.SetDefaultOption("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=AUTONOMOUS

    frc::SmartDashboard::PutData("Auto Mode", &m_chooser);

}

RobotContainer* RobotContainer::GetInstance() {
    if (m_robotContainer == NULL) {
        m_robotContainer = new RobotContainer();
    }
    return(m_robotContainer);
}

void RobotContainer::ConfigureButtonBindings() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=BUTTONS



    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=BUTTONS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

frc::Joystick* RobotContainer::getXboxController2() {
   return &m_xboxController2;
}
frc::XboxController* RobotContainer::getXboxController1() {
   return &m_xboxController1;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS


frc2::Command* RobotContainer::GetAutonomousCommand() {
  // The selected command will be run in autonomous
  return m_chooser.GetSelected();
}